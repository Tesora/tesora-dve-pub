//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4-2 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2013.11.01 at 06:28:31 PM EDT 
//


package com.tesora.dve.tools.analyzer.jaxb;

/*
 * #%L
 * Tesora Inc.
 * Database Virtualization Engine
 * %%
 * Copyright (C) 2011 - 2014 Tesora Inc.
 * %%
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License, version 3,
 * as published by the Free Software Foundation.
 * 
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU Affero General Public License for more details.
 * 
 * You should have received a copy of the GNU Affero General Public License
 * along with this program. If not, see <http://www.gnu.org/licenses/>.
 * #L%
 */

import javax.xml.bind.annotation.XmlRegistry;


/**
 * This object contains factory methods for each 
 * Java content interface and Java element interface 
 * generated in the com.tesora.dve.tools.analyzer.jaxb package. 
 * <p>An ObjectFactory allows you to programatically 
 * construct new instances of the Java representation 
 * for XML content. The Java representation of XML 
 * content can consist of schema derived interfaces 
 * and classes representing the binding of schema 
 * type definitions, element declarations and model 
 * groups.  Factory methods for each of these are 
 * provided in this class.
 * 
 */
@XmlRegistry
public class ObjectFactory {


    /**
     * Create a new ObjectFactory that can be used to create new instances of schema derived classes for package: com.tesora.dve.tools.analyzer.jaxb
     * 
     */
    public ObjectFactory() {
    }

    /**
     * Create an instance of {@link KeysType }
     * 
     */
    public KeysType createKeysType() {
        return new KeysType();
    }

    /**
     * Create an instance of {@link ColumnsType }
     * 
     */
    public ColumnsType createColumnsType() {
        return new ColumnsType();
    }

    /**
     * Create an instance of {@link IndexesType }
     * 
     */
    public IndexesType createIndexesType() {
        return new IndexesType();
    }

    /**
     * Create an instance of {@link TablesType }
     * 
     */
    public TablesType createTablesType() {
        return new TablesType();
    }

    /**
     * Create an instance of {@link ProceduresType }
     * 
     */
    public ProceduresType createProceduresType() {
        return new ProceduresType();
    }

    /**
     * Create an instance of {@link DatabasesType }
     * 
     */
    public DatabasesType createDatabasesType() {
        return new DatabasesType();
    }

    /**
     * Create an instance of {@link AnalyzerType }
     * 
     */
    public AnalyzerType createAnalyzerType() {
        return new AnalyzerType();
    }

    /**
     * Create an instance of {@link AnalyzerType.Options }
     * 
     */
    public AnalyzerType.Options createAnalyzerTypeOptions() {
        return new AnalyzerType.Options();
    }

    /**
     * Create an instance of {@link DbAnalyzerCorpus }
     * 
     */
    public DbAnalyzerCorpus createDbAnalyzerCorpus() {
        return new DbAnalyzerCorpus();
    }

    /**
     * Create an instance of {@link StatementPopulationType }
     * 
     */
    public StatementPopulationType createStatementPopulationType() {
        return new StatementPopulationType();
    }

    /**
     * Create an instance of {@link StatementNonDMLType }
     * 
     */
    public StatementNonDMLType createStatementNonDMLType() {
        return new StatementNonDMLType();
    }

    /**
     * Create an instance of {@link DbAnalyzerReport }
     * 
     */
    public DbAnalyzerReport createDbAnalyzerReport() {
        return new DbAnalyzerReport();
    }

    /**
     * Create an instance of {@link DatabaseInformationType }
     * 
     */
    public DatabaseInformationType createDatabaseInformationType() {
        return new DatabaseInformationType();
    }

    /**
     * Create an instance of {@link InsertTuples }
     * 
     */
    public InsertTuples createInsertTuples() {
        return new InsertTuples();
    }

    /**
     * Create an instance of {@link StatementNonInsertType }
     * 
     */
    public StatementNonInsertType createStatementNonInsertType() {
        return new StatementNonInsertType();
    }

    /**
     * Create an instance of {@link StatementInsertIntoValuesType }
     * 
     */
    public StatementInsertIntoValuesType createStatementInsertIntoValuesType() {
        return new StatementInsertIntoValuesType();
    }

    /**
     * Create an instance of {@link KeysType.PrimaryKey }
     * 
     */
    public KeysType.PrimaryKey createKeysTypePrimaryKey() {
        return new KeysType.PrimaryKey();
    }

    /**
     * Create an instance of {@link KeysType.ForeignKey }
     * 
     */
    public KeysType.ForeignKey createKeysTypeForeignKey() {
        return new KeysType.ForeignKey();
    }

    /**
     * Create an instance of {@link ColumnsType.Column }
     * 
     */
    public ColumnsType.Column createColumnsTypeColumn() {
        return new ColumnsType.Column();
    }

    /**
     * Create an instance of {@link IndexesType.Index }
     * 
     */
    public IndexesType.Index createIndexesTypeIndex() {
        return new IndexesType.Index();
    }

    /**
     * Create an instance of {@link TablesType.Table }
     * 
     */
    public TablesType.Table createTablesTypeTable() {
        return new TablesType.Table();
    }

    /**
     * Create an instance of {@link ProceduresType.Procedure }
     * 
     */
    public ProceduresType.Procedure createProceduresTypeProcedure() {
        return new ProceduresType.Procedure();
    }

    /**
     * Create an instance of {@link DatabasesType.Database }
     * 
     */
    public DatabasesType.Database createDatabasesTypeDatabase() {
        return new DatabasesType.Database();
    }

    /**
     * Create an instance of {@link AnalyzerType.Connection }
     * 
     */
    public AnalyzerType.Connection createAnalyzerTypeConnection() {
        return new AnalyzerType.Connection();
    }

    /**
     * Create an instance of {@link AnalyzerType.Options.Option }
     * 
     */
    public AnalyzerType.Options.Option createAnalyzerTypeOptionsOption() {
        return new AnalyzerType.Options.Option();
    }

}
