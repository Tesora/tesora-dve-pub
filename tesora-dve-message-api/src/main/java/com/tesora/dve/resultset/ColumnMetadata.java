// OS_STATUS: public
package com.tesora.dve.resultset;

/*
 * #%L
 * Tesora Inc.
 * Database Virtualization Engine
 * %%
 * Copyright (C) 2011 - 2014 Tesora Inc.
 * %%
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License, version 3,
 * as published by the Free Software Foundation.
 * 
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU Affero General Public License for more details.
 * 
 * You should have received a copy of the GNU Affero General Public License
 * along with this program. If not, see <http://www.gnu.org/licenses/>.
 * #L%
 */

import java.sql.Types;

import com.tesora.dve.db.NativeType;

public class ColumnMetadata {

	private String dbName = null;
	private String tableName = null;
	private String name;
	private String aliasName;
	private int dataType;
	private byte nativeTypeId;
	private String nativeTypeName;
	private String nativeTypeModifiers;
	private int size = 0;
	private int hashPosition = 0;
	private int precision = 0;
	private int scale = 0;
	private Boolean nullable = false;
	private Boolean hasDefault = false;
	private Boolean autoGenerated = false;
	private String defaultValue = "";
	private Boolean defaultValueIsConstant = false;
	private Boolean onUpdate = false;
	private Integer orderInTable;
	private Boolean isNonUnique = false;
	private Boolean isPrimary = false;
	private Boolean isUnique = false;
	private int nativeTypeFlags;
	
	public ColumnMetadata() {
	}

	public ColumnMetadata(String name, int size, String nativeTypeName, int dataType, boolean requiresFix ) {
		this(name, dataType, nativeTypeName, requiresFix);
		this.size = size;
	}
	public ColumnMetadata(String name, int size, String nativeTypeName, int dataType ) {
		this(name, size, nativeTypeName, dataType, true);
	}

	public ColumnMetadata(String name, int dataType, String nativeTypeName, boolean requiresFix ) {
		this.name = name;
		this.dataType = dataType;
		if (requiresFix)
			this.setNativeTypeName(nativeTypeName);
		else
			this.nativeTypeName = nativeTypeName;
	}

	public ColumnMetadata(String name, int dataType, String nativeTypeName ) {
		this(name, dataType, nativeTypeName, true);
	}
	
	public String getDbName() {
		return dbName;
	}
	public void setDbName(String dbName) {
		this.dbName = dbName;
	}

	public String getTableName() {
		return tableName;
	}
	public void setTableName(String tableName) {
		this.tableName = tableName;
	}
	
	public String getName() {
		return name;
	}
	public String getQueryName() {
		if ( usingAlias() )
			return getAliasName();
		
		return getName();
	}
	public void setName(String name) {
		this.name = name;
	}

	public boolean usingAlias() {
		return ( getAliasName() != null && !getAliasName().equals(getName()) );
	}
	public String getAliasName() {
		return aliasName;
	}
	public void setAliasName(String aliasName) {
		this.aliasName = aliasName;
	}

	public int getDataType() {
		return dataType;
	}
	public void setDataType(int dataType) {
		this.dataType = dataType;
	}
	
	public byte getNativeTypeId() {
		return nativeTypeId;
	}

	public void setNativeTypeId(byte nativeTypeId) {
		this.nativeTypeId = nativeTypeId;
	}

	public String getNativeTypeName() {
		return nativeTypeName;
	}
	public String getFullNativeTypeName() {
		if ( nativeTypeModifiers == null )
			return nativeTypeName;
		
		return nativeTypeName + " " + nativeTypeModifiers;
	}
	
	public void setNativeTypeName(String nativeTypeName) {
		this.nativeTypeName = NativeType.fixName(nativeTypeName);
	}

	public String getNativeTypeModifiers() {
		return nativeTypeModifiers;
	}
	
	public void setNativeTypeModifiers(String nativeTypeModifiers) {
		this.nativeTypeModifiers = NativeType.fixName(nativeTypeModifiers);
	}
	
	public int getSize() {
		return size;
	}
	public void setSize(int size) {
		this.size = size;
	}
	
	public int getHashPosition() {
		return hashPosition;
	}
	public void setHashPosition(int hashPosition) {
		this.hashPosition = hashPosition;
	}
	
	public int getPrecision() {
		return precision;
	}
	public void setPrecision(int precision) {
		this.precision = precision;
	}
	
	public int getScale() {
		return scale;
	}
	public void setScale(int scale) {
		this.scale = scale;
	}
	
	public Boolean getNullable() {
		return nullable;
	}
	public boolean isNullable() {
		return nullable;
	}
	public void setNullable(Boolean nullable) {
		this.nullable = nullable;
	}
	
	public boolean hasDefault() {
		return hasDefault();
	}
	public Boolean getHasDefault() {
		return hasDefault;
	}
	public void setHasDefault(Boolean hasDefault) {
		this.hasDefault = hasDefault;
	}
	
	public Boolean getAutoGenerated() {
		return autoGenerated;
	}
	public boolean isAutoGenerated() {
		return autoGenerated;
	}
	public void setAutoGenerated(Boolean autoGenerated) {
		this.autoGenerated = autoGenerated;
	}
	
	public String getDefaultValue() {
		return defaultValue;
	}
	public void setDefaultValue(String defaultValue) {
		this.defaultValue = defaultValue;
	}
	
	public Boolean getDefaultValueIsConstant() {
		return defaultValueIsConstant;
	}
	public void setDefaultValueIsConstant(Boolean defaultValueIsConstant) {
		this.defaultValueIsConstant = defaultValueIsConstant;
	}
	
	public Boolean getOnUpdate() {
		return onUpdate;
	}
	public void setOnUpdate(Boolean onUpdate) {
		this.onUpdate = onUpdate;
	}
	
	public Integer getOrderInTable() {
		return orderInTable;
	}
	public void setOrderInTable(Integer orderInTable) {
		this.orderInTable = orderInTable;
	}

	public int getNativeTypeFlags() {
		return nativeTypeFlags;
	}

	public void setNativeTypeFlags(int nativeTypeFlags) {
		this.nativeTypeFlags = nativeTypeFlags;
	}

	@Override
	public String toString() {
		return "ColumnMetadata [dbName=" + dbName + ", tableName=" + tableName + ", name=" + name + ", aliasName=" + aliasName
				+ ", dataType=" + dataType + ", nativeType=" + nativeTypeName + "/" + nativeTypeId + ", nativeTypeModifiers="
				+ nativeTypeModifiers + "]";
	}
	
	public boolean isBinaryType() {
		return dataType == Types.LONGVARBINARY || dataType == Types.BLOB ||
				dataType == Types.BINARY || dataType == Types.VARBINARY;
	}
	
	public Boolean isKeyPart() {
		return isPrimaryKey() || isUniqueKey() || isNonUniqueKey();
	}
	
	public Boolean isPrimaryKey() { 
		return isPrimary; 
	}

	public void primaryKey() { 
		isPrimary = true;
		isNonUnique = false;
		isUnique = false;
	}

	public Boolean isUniqueKey() { 
		return isUnique; 
	}

	public void uniqueKey() { 
		isUnique = true;
		isNonUnique = false;
		isPrimary = false;
	}

	public Boolean isNonUniqueKey() { 
		return isNonUnique; 
	}

	public void nonUniqueKey() { 
		isUnique = false;
		isNonUnique = true;
		isPrimary = false;
	}
}

